openapi: "3.0.3"

info:
  title: "Iced Latte Rating API"
  description: "API allows users to add ratings to products."
  version: "1.0.0"
  contact:
    name: "Iced Latte Support"
    email: "zufar.sunagatov@gmail.com"

servers:
  - url: "http://localhost:8083"
    description: "Local development server"
  - url: "https://iced-latte.uk/backend"
    description: "Production server"

tags:
  - name: "Rating"
    description: "Operations related to rating products"

paths:
  /api/v1/rating/product:
    post:
      tags:
        - "Rating"
      summary: "Add mark to product"
      operationId: "addNewMarkToProduct"
      requestBody:
        description: "Payload containing the product ID and mark."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddNewMarkToProductRequest"
            examples:
              add-mark:
                summary: "Add Mark"
                value: {"productId": "a1b2c3d4", "mark": 5}
      responses:
        "200":
          description: "Mark added successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingDto"

  /api/v1/rating/product/{productId}:
    get:
      tags:
        - "Rating"
      summary: "Get rating"
      operationId: "getRatingByProductId"
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of the product to get rating for"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Rating retrieved successfully."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RatingMark"

components:
  schemas:
    AddNewMarkToProductRequest:
      type: object
      properties:
        productId:
          type: string
          format: "uuid"
        mark:
          type: Integer
      required:
        - productId
        - mark

    RatingDto:
      type: object
      properties:
        productId:
          type: string
          format: "uuid"
        userId:
          type: string
          format: "uuid"
        mark:
          type: Integer
      required:
        - productId
        - userId
        - mark

    RatingMark:
      type: object
      properties:
        mark:
          type: Integer
        quantity:
          type: Integer
      required:
        - mark
        - quantity