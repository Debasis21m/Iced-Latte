openapi: "3.0.3"

info:
  title: "Iced Latte Order API"
  description: "API allows users to access orders and related operations."
  version: "1.0.0"
  contact:
    name: "Iced Latte Support"
    email: "zufar.sunagatov@gmail.com"

servers:
  - url: "http://localhost:8083"
    description: "Local development server"
  - url: "https://iced-latte.uk/backend"
    description: "Production server"

tags:
  - name: "Orders"
    description: "Operations related to orders"

paths:
  /api/v1/orders:
    get:
      tags:
        - "Orders"
      summary: "Get all orders for the authorized user by status"
      operationId: "getOrders"
      parameters:
        - name: "status"
          description: "Array of status codes to be applied for orders filtering"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/OrderStatus"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OrderResponseDto"
        "401":
          description: "Unauthorized access."
        "404":
          description: "Orders list is empty."
        "500":
          description: "Internal server error."

    post:
      tags:
        - "Orders"
      summary: "Add order for the authorized user"
      operationId: "createOrder"
      requestBody:
        description: "Payload containing a list of order details."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequestDto"
      responses:
        "200":
          description: "Order placed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDto"
        "400":
          description: "Invalid input, object invalid."
        "401":
          description: "Unauthorized access."
        "500":
          description: "Internal server error."

components:
  schemas:
    OrderStatus:
      type: string
      description: "Order status: 'CREATED' - new order recently created, 'PAID' - order was paid, 'DELIVERY' - order was sent, 'FINISHED' - order was delivered"
      enum: [ CREATED, PAID, DELIVERY, FINISHED ]

    OrderRequestDto:
      type: "object"
      description: "An order structure in the Iced-Latte system"
      required:
        - line
        - city
        - country
        - postcode
        - recipientName
        - recipientSurname
      properties:
        line:
          type: "string"
          description: "Address' line"
        city:
          type: "string"
          description: "Address' city"
        country:
          type: "string"
          description: "Address' country"
        postCode:
          type: "string"
          description: "Address' postcode"
        recipientName:
          type: "string"
          description: "May be different from the user's name"
        recipientSurname:
          type: "string"
          description: "May be different from the user's surname"

    OrderResponseDto:
      type: "object"
      description: "Response on successfully added or updated order"
      required:
        - id
        - status
        - createdAt
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "The unique identifier for the order"
        status:
          $ref: '#/components/schemas/OrderStatus'
        createdAt:
            type: "string"
            format: "date-time"
